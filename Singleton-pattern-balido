from abc import ABCMeta, abstractstaticmethod


class IPerson(metaclass=ABCMeta):

    @abstractstaticmethod
    def print_data():
        """ implement in child class """


class PersonSingleton(IPerson):

    __instance = None           # This isntance variable here is going to be the one or single one instance that we can create here

    @staticmethod
    def get_instance():
        if PersonSingleton.__instance == None:
            PersonSingleton("Default Name", 0)
        return PersonSingleton.__instance                    # if the instance is not none so it is already set if we already have an instance


    def __init__(self, name, age):                      # The initializer
        if PersonSingleton.__instance != None:          #
            raise Exception("Singleton cannot be instantiated more than once!")
        else:
            self.name = name
            self.age = age
            PersonSingleton.__instance = self


    @staticmethod
    def print_data():                   # The implementing the abract method
        print(f"Name: {PersonSingleton.__instance.name} Age: {PersonSingleton.__instance.age}")


p = PersonSingleton("Dave\n", 21)
print(p)
p.print_data()

